buildscript {
    repositories {
        jcenter()
        mavenCentral()
        //maven { url = "http://maven.jihuayu.site/" }
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
    dependencies {
    	classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.10.0"
group = "com.pinball3d.zone" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "zone"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations.all {
    // Check for snapshots more frequently than Gradle's default of 1 day. 0 = every build.
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories{
    maven {
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    //maven {
    //    url = "https://modmaven.k-4u.nl"
    //}
    maven {
        url = 'http://maven.mcmoddev.com'
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me"
    }
    maven {
    	url "https://mirrors.tuna.tsinghua.edu.cn/"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    provided "mezz.jei:jei_${mc_version}:${jei_version}"
    compile "org.apache.pdfbox:pdfbox:2.0.21"
    compile "org.apache.pdfbox:fontbox:2.0.21"
    provided files('lib/CraftTweaker2-1.12-4.1.20.618-deobf.jar')
    compile files('lib/freetype-jni_1.0.jar')
    compile files('natives/')
}

shadowJar {
    dependencies {
        include(dependency('org.apache.pdfbox:pdfbox:2.0.21'))
        include(dependency('org.apache.pdfbox:fontbox:2.0.21'))
    }
    exclude 'dummyThing' // can someone explain why this is here
    classifier = 'release'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

runClient {
    args = ["--username","3DPinball"]
}

build.dependsOn(shadowJar)